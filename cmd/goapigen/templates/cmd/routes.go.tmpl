package main

import (
	"net/http"

	"github.com/go-chi/chi/v5"
{{- if .HasResources}}
	// Import services and handlers
{{- range .Resources}}
{{- if .HasHandler}}
	{{.VarName}} "{{$.ImportPath}}/internal/services/{{.VarName}}"
	{{.VarName}}Handler "{{$.ImportPath}}/internal/adapters/http/{{.VarName}}"
{{- end}}
{{- end}}
{{- end}}
)

{{- if .HasResources}}
// Handlers holds services for dependency injection
type Handlers struct {
{{- range .Resources}}
{{- if .HasHandler}}
	{{.Name}}Service {{.VarName}}.{{.Name}}Service
{{- end}}
{{- end}}
}
{{- end}}

// registerRoutes sets up all application routes
// This file is regenerated - do not edit manually
func registerRoutes(r *chi.Mux{{- $hasHandlers := false}}{{- range .Resources}}{{- if .HasHandler}}{{- $hasHandlers = true}}{{- end}}{{- end}}{{- if $hasHandlers}}, handlers *Handlers{{- end}}) {
	// Health check route (always present)
	r.Get("/health", func(w http.ResponseWriter, r *http.Request) {
		w.WriteHeader(http.StatusOK)
		w.Write([]byte("OK"))
	})

{{- if .HasResources}}
	// Register handlers directly on main router (no mounting needed)
{{- range .Resources}}
{{- if .HasHandler}}
	{{.VarName}}Handler.New{{.Name}}Handler(r, handlers.{{.Name}}Service)
{{- end}}
{{- end}}
{{- end}}
} 