package mocks

import (
	"context"

	"github.com/stretchr/testify/mock"
	"{{.ImportPath}}/internal/pkg/domain"
	"{{.ImportPath}}/internal/services/{{.Domain}}"
)

// Mock{{.SchemaName}}Service is a mock implementation of {{.Domain}}.{{.SchemaName}}Service
type Mock{{.SchemaName}}Service struct {
	mock.Mock
}

// Create is the mocked implementation
func (m *Mock{{.SchemaName}}Service) Create(ctx context.Context, request {{.Domain}}.{{.SchemaName}}CreateRequest) (domain.{{.SchemaName}}, error) {
	args := m.Called(ctx, request)
	return args.Get(0).(domain.{{.SchemaName}}), args.Error(1)
}

// GetByID is the mocked implementation
func (m *Mock{{.SchemaName}}Service) GetByID(ctx context.Context, id string) (domain.{{.SchemaName}}, error) {
	args := m.Called(ctx, id)
	return args.Get(0).(domain.{{.SchemaName}}), args.Error(1)
}

// List is the mocked implementation
func (m *Mock{{.SchemaName}}Service) List(ctx context.Context) ([]domain.{{.SchemaName}}, error) {
	args := m.Called(ctx)
	return args.Get(0).([]domain.{{.SchemaName}}), args.Error(1)
}

// Update is the mocked implementation
func (m *Mock{{.SchemaName}}Service) Update(ctx context.Context, id string, request {{.Domain}}.{{.SchemaName}}UpdateRequest) (domain.{{.SchemaName}}, error) {
	args := m.Called(ctx, id, request)
	return args.Get(0).(domain.{{.SchemaName}}), args.Error(1)
}

// Delete is the mocked implementation
func (m *Mock{{.SchemaName}}Service) Delete(ctx context.Context, id string) error {
	args := m.Called(ctx, id)
	return args.Error(0)
} 